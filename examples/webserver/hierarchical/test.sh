#!/bin/bash

# Script de teste para demonstrar o cache hier√°rquico do GoCacheX

set -e

echo "üöÄ Testando GoCacheX Cache Hier√°rquico (L1 + L2)"
echo "================================================"

# Verificar se o servidor est√° rodando
if ! curl -s http://localhost:8081/api/v1/products > /dev/null; then
    echo "‚ùå Servidor hier√°rquico n√£o est√° rodando!"
    echo "   Execute primeiro: go run hierarchical_cache.go"
    exit 1
fi

echo "‚úÖ Servidor hier√°rquico est√° rodando!"
echo ""

# 1. Listar produtos (primeira vez - database)
echo "1Ô∏è‚É£ Listar produtos (primeira vez - database):"
curl -s -i http://localhost:8081/api/v1/products | head -n 10
echo ""

# 2. Listar produtos (segunda vez - L1 cache hit)
echo "2Ô∏è‚É£ Listar produtos (segunda vez - L1 cache hit):"
curl -s -i http://localhost:8081/api/v1/products | head -n 10
echo ""

# 3. Buscar produto espec√≠fico (primeira vez - database)
echo "3Ô∏è‚É£ Buscar produto 1 (primeira vez - database):"
curl -s -i http://localhost:8081/api/v1/products/1 | head -n 10
echo ""

# 4. Buscar produto espec√≠fico (segunda vez - L1 cache hit)
echo "4Ô∏è‚É£ Buscar produto 1 (segunda vez - L1 cache hit):"
curl -s -i http://localhost:8081/api/v1/products/1 | head -n 10
echo ""

# 5. Estat√≠sticas do cache
echo "5Ô∏è‚É£ Estat√≠sticas do cache (L1 e L2):"
curl -s http://localhost:8081/api/v1/cache/stats | jq .
echo ""

# 6. Buscar diferentes produtos para popular o cache
echo "6Ô∏è‚É£ Populando cache com diferentes produtos:"
for i in {2..5}; do
    echo "   Buscando produto $i..."
    curl -s http://localhost:8081/api/v1/products/$i > /dev/null
done
echo ""

# 7. Estat√≠sticas ap√≥s popular o cache
echo "7Ô∏è‚É£ Estat√≠sticas ap√≥s popular o cache:"
curl -s http://localhost:8081/api/v1/cache/stats | jq .
echo ""

# 8. Atualizar produto (deve invalidar cache)
echo "8Ô∏è‚É£ Atualizando produto 1 (deve invalidar cache):"
curl -s -X PUT http://localhost:8081/api/v1/products/1 \
  -H "Content-Type: application/json" \
  -d '{"name":"Laptop Updated","price":1099.99,"category":"Electronics","description":"Updated high-performance laptop"}' | jq .
echo ""

# 9. Buscar produto atualizado (deve ser database miss novamente)
echo "9Ô∏è‚É£ Buscar produto 1 atualizado (cache miss):"
curl -s -i http://localhost:8081/api/v1/products/1 | head -n 10
echo ""

# 10. Estat√≠sticas finais
echo "üîü Estat√≠sticas finais:"
curl -s http://localhost:8081/api/v1/cache/stats | jq .
echo ""

echo "‚úÖ Teste de cache hier√°rquico completo!"
echo ""
echo "üìä Observa√ß√µes sobre o cache hier√°rquico:"
echo "   ‚Ä¢ L1 (Memory): Cache r√°pido, menor capacidade"
echo "   ‚Ä¢ L2 (Redis): Cache persistente, maior capacidade"
echo "   ‚Ä¢ Ordem de busca: L1 ‚Üí L2 ‚Üí Database"
echo "   ‚Ä¢ Dados s√£o promovidos do L2 para L1 automaticamente"
echo "   ‚Ä¢ Invalida√ß√£o remove dados de ambos os n√≠veis"
