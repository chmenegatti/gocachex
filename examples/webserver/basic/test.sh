#!/bin/bash

# Script de teste para demonstrar o exemplo de web server do GoCacheX

set -e

echo "üöÄ Testando GoCacheX Web Server Example"
echo "========================================"

# Verificar se o servidor est√° rodando
if ! curl -s http://localhost:8080/health > /dev/null; then
    echo "‚ùå Servidor n√£o est√° rodando!"
    echo "   Execute primeiro: go run main.go"
    exit 1
fi

echo "‚úÖ Servidor est√° rodando!"
echo ""

# 1. Health check
echo "1Ô∏è‚É£ Health Check:"
curl -s http://localhost:8080/health | jq .
echo ""

# 2. Listar usu√°rios (primeira vez - cache miss)
echo "2Ô∏è‚É£ Listar usu√°rios (primeira vez - cache miss):"
curl -s -i http://localhost:8080/api/v1/users | head -n 10
echo ""

# 3. Listar usu√°rios (segunda vez - cache hit)
echo "3Ô∏è‚É£ Listar usu√°rios (segunda vez - cache hit):"
curl -s -i http://localhost:8080/api/v1/users | head -n 10
echo ""

# 4. Buscar usu√°rio espec√≠fico (primeira vez - cache miss)
echo "4Ô∏è‚É£ Buscar usu√°rio 1 (primeira vez - cache miss):"
curl -s -i http://localhost:8080/api/v1/users/1 | head -n 10
echo ""

# 5. Buscar usu√°rio espec√≠fico (segunda vez - cache hit)
echo "5Ô∏è‚É£ Buscar usu√°rio 1 (segunda vez - cache hit):"
curl -s -i http://localhost:8080/api/v1/users/1 | head -n 10
echo ""

# 6. Estat√≠sticas do cache
echo "6Ô∏è‚É£ Estat√≠sticas do cache:"
curl -s http://localhost:8080/api/v1/cache/stats | jq .
echo ""

# 7. Criar novo usu√°rio
echo "7Ô∏è‚É£ Criando novo usu√°rio:"
NEW_USER=$(curl -s -X POST http://localhost:8080/api/v1/users \
  -H "Content-Type: application/json" \
  -d '{"name":"David","email":"david@example.com"}')
echo $NEW_USER | jq .
NEW_USER_ID=$(echo $NEW_USER | jq -r .id)
echo ""

# 8. Buscar novo usu√°rio criado
echo "8Ô∏è‚É£ Buscar novo usu√°rio criado (ID: $NEW_USER_ID):"
curl -s http://localhost:8080/api/v1/users/$NEW_USER_ID | jq .
echo ""

# 9. Atualizar usu√°rio
echo "9Ô∏è‚É£ Atualizando usu√°rio $NEW_USER_ID:"
curl -s -X PUT http://localhost:8080/api/v1/users/$NEW_USER_ID \
  -H "Content-Type: application/json" \
  -d '{"name":"David Updated","email":"david.updated@example.com"}' | jq .
echo ""

# 10. Estat√≠sticas finais do cache
echo "üîü Estat√≠sticas finais do cache:"
curl -s http://localhost:8080/api/v1/cache/stats | jq .
echo ""

# 11. Limpar cache
echo "1Ô∏è‚É£1Ô∏è‚É£ Limpando cache:"
curl -s -X POST http://localhost:8080/api/v1/cache/clear
echo "Cache limpo!"
echo ""

# 12. Verificar cache ap√≥s limpeza
echo "1Ô∏è‚É£2Ô∏è‚É£ Estat√≠sticas ap√≥s limpeza:"
curl -s http://localhost:8080/api/v1/cache/stats | jq .
echo ""

# 13. Buscar usu√°rio ap√≥s limpeza (deve ser cache miss)
echo "1Ô∏è‚É£3Ô∏è‚É£ Buscar usu√°rio 1 ap√≥s limpeza (cache miss):"
curl -s -i http://localhost:8080/api/v1/users/1 | head -n 10
echo ""

echo "‚úÖ Teste completo! Verifique os logs do servidor para ver os HITs e MISSes."
